% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_cheem_lists.r
\name{attr_df_treeshap}
\alias{attr_df_treeshap}
\title{Extract the full treeSHAP data.frame of a randomForest model}
\usage{
attr_df_treeshap(
  randomForest_model,
  x,
  keep_heavy = FALSE,
  verbose = TRUE,
  noisy = TRUE
)
}
\arguments{
\item{randomForest_model}{The return of fitted randomForest::randomForest
model.}

\item{x}{The explanatory data (without response) to extract the local
attributions of.}

\item{keep_heavy}{Logical, if the heavy items "interactions",
"unified_model", and "observations" should be kept. Defaults to FALSE.}

\item{verbose}{Logical, if runtime should be printed. Defaults to TRUE.}

\item{noisy}{Logical, if a tone should be played on completion.
Defaults to TRUE.}
}
\value{
A dataframe of the local attributions.
}
\description{
A data.frame of each observations treeSHAP variable attributions of a
randomForest model.
A wrapper for \code{treeshap::randomForest.unify} and \code{treeshap::treeshap}.
}
\examples{
library(cheem)
## Regression:
sub <- amesHousing2018_thin[1:200, ]
X <- sub[, 1:10]
Y <- log(sub$SalePrice)
clas <- sub$MS.Zoning

rf_fit  <- default_rf(X, Y)
shap_df <- attr_df_treeshap(rf_fit, X) ## Long runtime!
this_ls <- cheem_ls(X, Y, class = clas,
                    model = rf_fit,
                    attr_df = shap_df)
}
