% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_cheem_lists.r
\name{default_rf}
\alias{default_rf}
\title{Random forest model via randomForest}
\usage{
default_rf(
  x,
  y,
  verbose = TRUE,
  hp_ntree = 125,
  hp_mtry = ifelse(is_discrete(y), sqrt(ncol(x)), ncol(x)/3),
  hp_nodesize = max(ifelse(is_discrete(y), 1, 5), nrow(x)/500)
)
}
\arguments{
\item{x}{The explanatory variables of the model.}

\item{y}{The target variable of the model.}

\item{verbose}{Logical, if runtime should be printed. Defaults to TRUE.}

\item{hp_ntree}{Hyper parameter, the number of trees to grow.}

\item{hp_mtry}{Hyper parameter, the number variables randomly sampled at
each split.}

\item{hp_nodesize}{Hyperparameter, Minimum size of terminal nodes.
Setting this number larger causes smaller trees to be grown (and thus take less time).}
}
\value{
A randomForest model.
}
\description{
A wrapper function for \code{randomForest::randomForest()} with more modest
hyperparameter defaults and consistent arguments with \code{cheem}.
}
\examples{
library(cheem)
## Regression:
sub <- amesHousing2018_thin[1:200, ]
X <- sub[, 1:9]
Y <- log(sub$SalePrice)
clas <- sub$ZoneMS

rf_fit  <- default_rf(X, Y)
shap_df <- attr_df_treeshap(rf_fit, X) ## Long runtime!
this_ls <- cheem_ls(X, Y, class = clas,
                    model = rf_fit,
                    attr_df = shap_df)
}
