% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trees_of_cheem.r
\name{proto_basis1d_distribution}
\alias{proto_basis1d_distribution}
\title{Adds the distribution of the row local attributions to a ggtour}
\usage{
proto_basis1d_distribution(
  layer_ls,
  group_by = as.factor(FALSE),
  position = c("top1d", "floor1d", "off"),
  shape = c(142, 124),
  do_add_pcp_segements = TRUE,
  shap_obs = NULL,
  comp_obs = NULL
)
}
\description{
Adds the distribution of orthonormalized row values of
the specified \code{local_attribution_df}. Does not at the basis itself,
use in conjunction with \code{proto_basis1d()}.
}
\examples{
load("./apps/cheem_penguins_classification/data/1preprocess.RData")
dat <- shap_layer_ls_3cobs$decode_df[, 4:7]
clas <- shap_layer_ls_3cobs$decode_df$class
shap_df <- shap_layer_ls_3cobs$shap_df[1:nrow(dat), -5]
bas <- basis_local_attribution(shap_df, nrow(dat))
mv <- manip_var_of(bas) ## Warning is fine.

## 1D case:
mt_path <- manual_tour(bas, mv, angle = .3)

debugonce(proto_basis1d)
ggt <- ggtour(mt_path, dat) +
  proto_density(aes_args = list(color = clas, fill = clas)) +
  proto_basis1d() +
  proto_basis1d_distribution(shap_df, group_by = clas)
\dontrun{
animate_plotly(ggt)
}
}
\concept{ggtour proto}
