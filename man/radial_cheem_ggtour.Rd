% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_visualization.r
\name{radial_cheem_ggtour}
\alias{radial_cheem_ggtour}
\title{Cheem tour; 1D manual tour on the selected attribution}
\usage{
radial_cheem_ggtour(
  cheem_ls,
  basis,
  manip_var,
  primary_obs = NULL,
  comparison_obs = NULL,
  do_add_pcp_segments = TRUE,
  pcp_shape = c(142, 124),
  angle = 0.2,
  row_index = NULL,
  inc_vars = NULL
)
}
\arguments{
\item{cheem_ls}{A return from \code{cheem_ls()}, a list of data frames.}

\item{basis}{A 1D projection basis, typically a return of
\code{basis_local_attribution()}.}

\item{manip_var}{The , \emph{number} of the manipulation variable.}

\item{primary_obs}{The rownumber of the primary observation. Its local
attribution becomes the 1d projection basis, and the point it highlighted
as a dashed line.}

\item{comparison_obs}{The rownumber of the comparison observation. Point
is highlighted as a dotted line.}

\item{do_add_pcp_segments}{Logical, whether or not to add parallel coordinate
line segments to the basis display.}

\item{pcp_shape}{The number of the shape character to add. Typically
142 or 124, '|' for \code{plotly} and \code{gganimate} respectively. Defaults to 142,
'|' for \code{plotly}.}

\item{angle}{The step size between interpolated frames, in radians.}

\item{row_index}{Numeric index of selected observations.
Defaults to TRUE; 1:n.}

\item{inc_vars}{A vector of the names of the variables to include in the projection.}
}
\value{
\code{plotly} plot of the global view, first 2 components of the basis of
the data- and attribution- spaces.
}
\description{
Create a linked \code{plotly}of the global data-
and attribution- spaces. Typically consumed directly by shiny app.
}
\examples{
library(cheem)
## Regression:
sub <- amesHousing2018_thin[1:200, ]
X <- sub[, 1:9]
Y <- log(sub$SalePrice)
clas <- sub$ZoneMS

rf_fit  <- default_rf(X, Y)
shap_df <- attr_df_treeshap(rf_fit, X)
this_ls <- cheem_ls(X, Y, class = clas,
                     model = rf_fit,
                     attr_df = shap_df)

bas <- basis_local_attribution(shap_df, rownum = 1)
ggt <- radial_cheem_ggtour(this_ls, basis = bas, manip_var = 1)
\dontrun{
spinifex::animate_plotly(ggt)
}

## Classification:
X    <- flea[, 1:6]
clas <- flea$species
Y    <- as.integer(clas)

rf_fit  <- default_rf(X, Y)
shap_df <- attr_df_treeshap(rf_fit, X) ## Long runtime!
this_ls <- cheem_ls(X, Y, class = clas,
                     model = rf_fit,
                     attr_df = shap_df)

bas <- basis_local_attribution(shap_df, rownum = 1)
ggt <- radial_cheem_ggtour(this_ls, basis = bas, manip_var = 1)
\dontrun{
animate_plotly(ggt)
}
}
